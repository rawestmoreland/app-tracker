name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/production-deploy.yml'
      - 'apps/web/**'
      - 'packages/**'
      - 'package.json'
      - 'package-lock.json'
      - 'turbo.json'
  workflow_dispatch:
jobs:
  deploy-and-test:
    name: Deploy and Test
    runs-on: ubuntu-latest
    outputs:
      preview-url: ${{ steps.preview-deploy.outputs.preview-url }}
      production-url: ${{ steps.production-deploy.outputs.production-url }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Deploy to Preview
        id: preview-deploy
        run: |
          npm install --global vercel@latest
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --target=preview --token=${{ secrets.VERCEL_TOKEN }}
          PREVIEW_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "preview-url=$PREVIEW_URL" >> $GITHUB_OUTPUT
          echo "Preview URL: $PREVIEW_URL"

      - name: Install dependencies
        run: npm ci

      - name: Run Critical E2E Tests against Preview
        working-directory: apps/web
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_PREVIEW }}
          CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY_PREVIEW }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY_PREVIEW }}
          CLERK_CALLBACK_URL: ${{ secrets.CLERK_CALLBACK_URL_PREVIEW }}
          CLERK_USERNAME: ${{ secrets.CLERK_USERNAME }}
          CLERK_PASSWORD: ${{ secrets.CLERK_PASSWORD }}
          NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL: '/onboarding'
          NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL: '/dashboard'
          NEXT_PUBLIC_CLERK_SIGN_IN_URL: '/sign-in'
          NEXT_PUBLIC_CLERK_SIGN_UP_URL: '/sign-up'
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          RESEND_AUDIENCE_ID: ${{ secrets.RESEND_AUDIENCE_ID }}
          CLERK_WEBHOOK_SIGNING_SECRET: ${{ secrets.CLERK_WEBHOOK_SIGNING_SECRET_PREVIEW }}
          VERCEL_AUTOMATION_BYPASS_SECRET: ${{ secrets.VERCEL_AUTOMATION_BYPASS_SECRET }}
          API_ACCESS_KEY: ${{ secrets.API_ACCESS_KEY }}
        run: |
          npx cypress run --config baseUrl=${{ steps.preview-deploy.outputs.preview-url }} --spec 'cypress/e2e/critical/*.cy.ts'

      - name: Deploy to Production
        if: success()
        id: production-deploy
        run: |
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          PROD_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "production-url=$PROD_URL" >> $GITHUB_OUTPUT
          echo "âœ… Deployed to production: $PROD_URL"
